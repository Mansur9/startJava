version: '3'

services:
  db:
    container_name: db
    image: mysql:5.7.21
    restart: always
    env_file: .env
    environment:
      - MYSQL_DATABASE=moonk
    volumes: 
      - ./docker/db:/var/lib/mysql
    command: '--default-authentication-plugin=mysql_native_password'
    networks:
      - moonk-network

  wordpress:
    container_name: wordpress
    depends_on: 
      - db
    image: wordpress:6.1.1-fpm-alpine
    restart: always
    env_file: .env
    environment:
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_DB_USER=$MYSQL_USER
      - WORDPRESS_DB_PASSWORD=$MYSQL_PASSWORD
      - WORDPRESS_DB_NAME=moonk
    volumes:
      - ./public_html:/var/www/test
    networks:
      - moonk-network

  wordpress_frontend:
    container_name: wordpress_frontend
    depends_on:
      - db
    image: wordpress:6.1.1-fpm-alpine
    restart: always
    env_file: .env
    environment:
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_DB_USER=$MYSQL_USER
      - WORDPRESS_DB_PASSWORD=$MYSQL_PASSWORD
      - WORDPRESS_DB_NAME=moonk_frontend
    volumes:
      - ./public_html_front:/var/www/frontend
    networks:
      - moonk-network

  wordpress_production:
    depends_on: 
      - db
    image: wordpress:6.1.1-fpm-alpine
    container_name: wordpress_production
    restart: always
    env_file: .env
    environment:
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_DB_USER=$MYSQL_USER
      - WORDPRESS_DB_PASSWORD=$MYSQL_PASSWORD
      - WORDPRESS_DB_NAME=production
    volumes:
      - ./production/public_html:/var/www/html
    networks:
      - moonk-network

  webserver:
    depends_on:
      - wordpress
      - wordpress_frontend
      - wordpress_production
    image: nginx:1.15.12-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - ./public_html:/var/www/test
      - ./public_html_front:/var/www/frontend
      - ./production/public_html:/var/www/html
      - ./docker/nginx-conf:/etc/nginx/conf.d
      - ./docker/certbot-etc:/etc/letsencrypt
      - ./docker/logs/nginx:/var/log/nginx
    networks:
      - moonk-network

  certbot:
    &certbot
    depends_on:
      - webserver
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./docker/certbot-etc:/etc/letsencrypt
      - ./public_html:/var/www/html
      - ./public_html_front:/var/www/public_html_front
      - ./production/public_html:/var/www/production
      - ./docker/logs/certbot:/var/log/letsencrypt
    command: certonly --webroot --webroot-path=/var/www/production --email sardan373@gmail.com --agree-tos --no-eff-email -d moonk-design.com

  certbot-test:
    << : *certbot
    container_name: certbot-test
    command: certonly --webroot --webroot-path=/var/www/html --email sardan373@gmail.com --agree-tos --no-eff-email -d moonk-test.site

  certbot-front:
    << : *certbot
    container_name: certbot-front
    command: certonly --webroot --webroot-path=/var/www/public_html_front --email sardan373@gmail.com --agree-tos --no-eff-email -d frontend.moonk-test.site

networks:
  moonk-network:
    driver: bridge
